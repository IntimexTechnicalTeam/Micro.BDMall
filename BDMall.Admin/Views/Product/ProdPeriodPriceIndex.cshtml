@{
    /**/

    ViewBag.Title = "ProdPeriodPriceIndex";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="app" class="col-md-12" v-cloak>

    <div>
        <table class="table table-condensed">
            <tr>
                <td class="col-xs-1">
                    @BDMall.Resources.Label.ProductCode
                </td>
                <td class="col-xs-5">
                    <input type="text" v-model="condition.ProductCode" class="form-control input-sm" />
                </td>
                <td class="col-xs-1">
                    @BDMall.Resources.Label.ProductName
                </td>
                <td class="col-xs-5">
                    <div class="row">
                        <div class="col-xs-9">
                            <input type="text" v-model="condition.ProductName" class="form-control input-sm" />
                        </div>

                    </div>
                </td>

            </tr>
        </table>
        <div id="collapseOne" class="panel-collapse collapse">
            <table class="table table-condensed">


                <tr>
                    <td class="col-xs-1">
                        @BDMall.Resources.Label.IsActive
                    </td>
                    <td class="col-xs-5">
                        <select id="cboIsActive" v-model="condition.IsActive" class="form-control" style="width:300px;">
                            <option value="-1">@BDMall.Resources.Label.PleaseSelect</option>
                            <option value="1">@BDMall.Resources.Label.Yes</option>
                            <option value="0" selected="selected">@BDMall.Resources.Label.No</option>
                        </select>
                    </td>
                    <td>
                        <span v-if="IsMerchant==false">
                            @BDMall.Resources.Label.MerchantName
                        </span>
                    </td>
                    <td>
                        @*<select id="cboMerchant" class="form-control" style="width:300px;" v-if="IsMerchant==false"></select>*@
                        <div class="form-inline">
                            <input type="text" class="form-control" id="txtexName" v-model="condition.MerchantName" style="width:300px;" v-if="IsMerchant==false">
                            <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Select" v-on:click="selectMerchant" v-if="IsMerchant==false" />
                        </div>
                    </td>
                </tr>


            </table>
        </div>
        <div class="text-right">
            <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Search" onclick="search();" />
            <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.ExtraCondition" data-toggle="collapse" data-target="#collapseOne" />
        </div>
    </div>


    <div>
        <div class="panel-body">
            <div id="toolbar" class="btn-group">
                <button id="btn_add" type="button" class="btn btn-default" v-on:click="Add">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
                </button>
                <button id="btn_modify" type="button" class="btn btn-default" v-on:click="Modify" v-bind:disabled="IsModify||IsOnSale==false">
                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
                </button>

                <button id="btn_delete" type="button" class="btn btn-default" v-on:click="Delete" v-bind:disabled="IsDelete||IsOnSale==false">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
                </button>
                <button id="btnActive" type="button" class="btn btn-default" v-on:click="Activate" v-bind:disabled="IsOnSale==false">
                    <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>@BDMall.Resources.Action.Activate
                </button>
                @*<button id="btnDeactivate" type="button" class="btn btn-default" v-on:click="Deactivate" v-bind:disabled="IsOffSale==false">
                    <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>@BDMall.Resources.Action.Deactivate
                </button>*@
                @*<button id="btn_ActiveProduct" type="button" class="btn btn-default" v-on:click="activeProducts" v-bind:disabled="IsOnSale==false">
                        <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>@BDMall.Resources.Action.PutOn
                    </button>
                    <button id="btn_DisActiveProduct" type="button" class="btn btn-default" v-on:click="disActiveProducts" v-bind:disabled="IsOffSale==false">
                        <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>@BDMall.Resources.Action.PullOff
                    </button>*@
                <a id="exportLink" href="" hidden></a>
            </div>
            <table id="tblProductPriceHour"></table>
        </div>
    </div>


    @*<data-pager url="/adminapi/Product/Search" ref='pager' v-bind:condition="condition" v-bind:pagesize="CurrentSize" v-on:load="LoadData"></data-pager>*@
    <div id="outerdiv" style="position:fixed;top:0;left:0;background:rgba(0,0,0,0.7);z-index:1200;width:100%;height:100%;display:none;">
        <div id="innerdiv" style="position:absolute;">
            <img id="bigimg" style="border:5px solid #fff;" src="" />
        </div>
    </div>
</div>
@section scripts {
    <script src="~/Scripts/admin/vue-component/productCatalog.js"></script>
    <script type="text/javascript">
        layui.use(['miniTab'], function () {
            var layer = layui.layer,
                miniTab = layui.miniTab;
        });
        var productTable;
        var CurrentRow = "";
        var tabId = self.frameElement.parentElement.id;
        var isMerchant = Boolean(@ViewBag.IsMerchant);
        var MerchName = '@ViewBag.MerchantName';
        var MerchId = '@ViewBag.MerchantId';
        var timer = null;
        var vm = new Vue({
            el: "#app",
            data: {
                IsMerchant: isMerchant,
                ViewType: 0,
                ProductList: [],
                Selected: [],

                condition: {
                    Language: "",
                    Key: "",
                    KeyWordType: "",
                    ProductCode: "",
                    Category: -1,

                    Attribute: -1,
                    AttributeValue: -1,

                    PermissionLevel: "",

                    OnSale: false,
                    SaleOff: false,
                    CreateDateFrom: "",
                    CreateDateTo: "",
                    IsActive: -1,
                    IsDeleted:0,
                    IsApprove: -1,
                    MerchantId: MerchId,
                    MerchantName: MerchName,
                    ApproveStatus:"-1"
                },
                IsDelete: true,

                IsExport: true,
                IsModify: true,
                IsOnModify: true,
                IsOnSale: true,
                IsOffSale: true,
                ProductCondtionCache: {
                    KeyWordTypes: [],
                    Attributes: [],
                    AttributeValues: [],
                    Permissions: [],
                    SortedKeys: [],
                    SortedKeyTypes: []
                },
                CurrentPage: 1,
                CurrentSize: 10
            },
            methods: {
                GetCurrentCategory: function (data) {
                    var obj = new Object();
                    vm.condition.Category = data.currentValue;
                    obj.catId = data.currentValue;

                },
                Add: function () {

                    miniTab.openNewTabByIframe({
                        href:"/Product/EditProdPeriodPrice/" + WS.GuidEmpty + "/Add/0",
                        title: '@BDMall.Resources.Label.AddProduct',
                        callback: search
                    });
                },
                Modify: function () {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    var type = "Modify";
                    var strSkus = "";
                    var ProductName = "";
                    selects.forEach(function (val) {
                        strSkus = val.PPHour.Id;
                        ProductName = val.ProductName;
                    });

                    modifyProdPrice(strSkus, ProductName,type);
                },
                Delete: function () {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    SystemConfirm('@BDMall.Resources.Message.DeleteConfirm',
                        function () {

                            var strSkus = "";
                            //if (vm.ViewType == 0) {
                            //    selects.forEach(function (val) {
                            //        strSkus += val.ProductId + ",";
                            //    });
                            //} else {
                            //    strSkus = vm.Selected.join(",");
                            //}
                            selects.forEach(function (val) {
                                strSkus += val.PPHour.Id + ",";
                            });

                            var data = new Object();
                            data.prodIDs = strSkus;
                            WS.AjaxP("get",
                                "/adminapi/Product/ProductPriceDelete",
                                data,
                                function (response) {
                                    if (response.Succeeded == true) {
                                        showWarn('@BDMall.Resources.Message.DeleteSucceeded');
                                        search();
                                    } else {
                                        showWarn(response.Message);
                                    }
                                },
                                function () { });
                        });

                },
                Activate: function () {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    SystemConfirm('@BDMall.Resources.Message.ActiveConfirm',
                        function () {

                            var strSkus = "";
                            //if (vm.ViewType == 0) {
                            //    selects.forEach(function (val) {
                            //        strSkus += val.ProductId + ",";
                            //    });
                            //} else {
                            //    strSkus = vm.Selected.join(",");
                            //}
                            selects.forEach(function (val) {
                                strSkus += val.PPHour.Id + ",";
                            });

                            var data = new Object();
                            data.prodIDs = strSkus;
                            WS.AjaxP("get",
                                "/adminapi/Product/ProductPriceActivate",
                                data,
                                function (response) {
                                    if (response.Succeeded == true) {

                                        search();
                                    } else {
                                        showWarn(response.Message);
                                    }
                                },
                                function () { });
                        });

                },
                Deactivate: function () {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    SystemConfirm('@BDMall.Resources.Message.DeactiveConfirm',
                        function () {

                            var strSkus = "";
                            //if (vm.ViewType == 0) {
                            //    selects.forEach(function (val) {
                            //        strSkus += val.ProductId + ",";
                            //    });
                            //} else {
                            //    strSkus = vm.Selected.join(",");
                            //}
                            selects.forEach(function (val) {
                                strSkus += val.PPHour.Id + ",";
                            });

                            var data = new Object();
                            data.prodIDs = strSkus;
                            WS.AjaxP("get",
                                "/adminapi/Product/ProductPriceDeactivate",
                                data,
                                function (response) {
                                    if (response.Succeeded == true) {

                                        search();
                                    } else {
                                        showWarn(response.Message);
                                    }
                                },
                                function () { });
                        });

                },
                SetButtonState: function () {
                    var datas = $("#tblProductPriceHour").bootstrapTable("getData");
                    var selected = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    if (selected.length >= 1) {
                        vm.IsDelete = false;
                    } else {
                        vm.IsDelete = true;
                    }
                    if (selected.length == 1) {
                        vm.IsModify = false;
                    }
                    else {
                        vm.IsModify = true;
                    }

                    var canOffSale = false;
                    var canOnSale = false;
                    if (selected.length >= 1) {
                        selected.forEach(function (val) {

                            if (val.PPHour.IsActive == true) {
                                canOffSale = true;
                                canOnSale = false;
                            }
                            else {
                                canOnSale = true;
                                canOffSale = false;
                            }
                        });
                    }
                    else
                    {
                        canOffSale = false;
                        canOnSale = false;
                    }


                    if (canOffSale) {
                        vm.IsOffSale = true;
                    }
                    else
                    {
                        vm.IsOffSale = false;
                    }

                    if (canOnSale) {
                        vm.IsOnSale = true;
                    }
                    else {
                        vm.IsOnSale = false;
                    }
                    //IsOnSale: true,
                    //    IsOffSale:true,

                    if (datas.length > 0) {
                        vm.IsExport = false;
                    } else {
                        vm.IsExport = true;
                    }
                },
                activeProducts: function () {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    var strSkus = "";

                    selects.forEach(function (val) {
                        strSkus += val.ProductId + ",";
                    });

                    WS.Get("/adminapi/Product/ActiveProducts",
                        { ids: strSkus},
                        function (response) {
                            if (response.Succeeded == true) {
                                search();
                            }
                            else {
                                showWarn(response.Message);
                            }
                        },
                        function () { });
                },
                disActiveProducts: function ()
                {
                    var selects = $("#tblProductPriceHour").bootstrapTable("getSelections");

                    var strSkus = "";

                    selects.forEach(function (val) {
                        strSkus += val.ProductId + ",";
                    });

                    WS.Get("/adminapi/Product/DisActiveProducts",
                        { ids: strSkus },
                        function (response) {
                            if (response.Succeeded == true) {
                                search();
                            }
                            else {
                                showWarn(response.Message);
                            }
                        },
                        function () { });
                },
                applyApprove: function (id) {
                    WS.Get("/adminapi/Product/ApplyApprove", { id: id },
                        function (response) {
                            if (response.Succeeded == true) {
                                search();
                            }
                            else {
                                showWarn(response.Message);
                            }
                        },
                        function () { });
                },
                selectMerchant: function () {

                    OpenDialog("@BDMall.Resources.Label.Merchant", 1000, 700, "/Merchant/SelectMerchant/1/0/0", null, function (data) {
                        if (data && data.results && data.results.length > 0) {
                            data.results.forEach(function (val) {
                                vm.condition.MerchantId = val.Id;
                                vm.condition.MerchantName = val.Name;


                            });

                        }
                    });
                }

            }
        });

        var ProductTableInit = function () {

            var btTable = new Object();

            btTable.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }

                var sortedBy = params.sort;
                var sorted = params.order;


                vm.condition.Attribute ="";
                vm.condition.AttributeValue = "";
                vm.condition.PermissionLevel = "";
                vm.condition.ApproveStatus ="-1";// $("#cboStatus").val();


                vm.condition.PageInfo = { Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted };

                //vm.$refs.pager.setPageSize(params.limit);
                return vm.condition;
                //return {
                //    Condition: vm.condition, Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted
                //};
            }
            btTable.Init = function () {

                $("#tblProductPriceHour").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    //url: '/adminapi/Product/Search',         //请求后台的URL（*）
                    queryParams: btTable.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: true,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 750,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "PPHour.Id",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    dataField: "Data",
                    totalField: "TotalRecord",
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onLoadSuccess: function () {
                        vm.SetButtonState();
                    },
                    onCheck: function (row) {
                        vm.SetButtonState();
                    },
                    onUncheck: function (row) {
                        vm.SetButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.SetButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.SetButtonState();
                    },

                    columns: [{
                        checkbox: true
                    }, {
                            field: 'PPHour.Id',
                            title: 'Id',
                            visible: false
                    }, {
                        field: 'MerchantName',
                        title: '@BDMall.Resources.Label.MerchantName'
                    }, {
                        field: 'ProductCode',
                        title: '@BDMall.Resources.Label.ProductCode',

                    }, {
                        field: 'ProductName',
                        title: '@BDMall.Resources.Label.ProductName',

                    }, {
                            field: 'BeginEffectTimeString',
                        title: '@BDMall.Resources.Label.BeginTime',
                    }, {
                            field: 'EndEffectTimeString',
                        title: '@BDMall.Resources.Label.EndTime',
                    }, {
                            field: 'PPHour.TimePrice',
                        title: '@BDMall.Resources.Label.Price',
                    },{
                            field: 'PPHour.IsActive',
                        title: '@BDMall.Resources.Label.IsActive',
                    },{
                            field: 'UpdateDateString',
                        title: '@BDMall.Resources.Label.UpdateDate',

                    },{
                         field: 'PPHour.IsDeleted',
                        visible: false

                    }],
                    formatLoadingMessage: function () {
                        //return '<%=Resources.Message.Processing%>';
                        return '';
                    }

                });
            };

            return btTable;
        }


        function search() {


            $("#tblProductPriceHour").bootstrapTable("refresh", { url: "/adminapi/Product/SearhProductPriceHour", pageNumber: 1 });


        }

        function modifyProdPrice(id, name,type) {
            var id = id;
            name = name.ReplaceAll("<apos>", "&apos;")
            name = name.ReplaceAll("<quot>", "&quot;");

            miniTab.openNewTabByIframe({
                href:"/Product/EditProdPeriodPrice/" + id + "/" + type,
                title: '@BDMall.Resources.Action.Modify' + "-" + name,
                callback: search
            });
        }

        function applyApprove(id) {
            vm.applyApprove(id);
        }
        function copyProduct(id) {
            var ID = id;
            miniTab.openNewTabByIframe({
                href:"/Product/EditProduct/" + ID + "/Copy",
                title: '@BDMall.Resources.Label.CopyProduct',
                callback: search
            });
        }
        function newVerProduct(id) {
            var ID = id;
            miniTab.openNewTabByIframe({
                href:"/Product/EditProduct/" + ID + "/NewVer",
                title: '@BDMall.Resources.Label.CreateNewVersion',
                callback: search
            });
        }



        $(document).ajaxStart(function () {
            showLoading();
        });
        $(document).ajaxStop(function () {
            hideLoading();
        });





        $(document).ready(function () {



            var oTable = ProductTableInit();
            oTable.Init();
            search();

            //setTimeout(search, 1000);
            //cover();



        });

    </script>
}
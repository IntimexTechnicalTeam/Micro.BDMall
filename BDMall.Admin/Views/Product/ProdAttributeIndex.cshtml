
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="app" class="col-md-12" v-cloak>
    <table class="table">
        <tr>

            <td class="col-md-2">
                <form class="form-inline">
                    @BDMall.Resources.Label.AttributeName
                    <input type="text" class="form-control" id="txtAttributeName" style="width:300px;" />
                    <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Search" v-on:click="Search" />
                </form>
            </td>
        </tr>

    </table>
    <ul id="myTab" class="nav nav-tabs">
        <li class="active" v-on:click="TabClick(0)">
            <a href="#SelfDefine" data-toggle="tab">@BDMall.Resources.Label.InvtAttribute</a>
        </li>
        <li v-on:click="TabClick(1)">
            <a href="#Routine" data-toggle="tab">@BDMall.Resources.Label.RoutineAttributeTab</a>
        </li>
    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="SelfDefine">
            <div>
                <div class="panel-body">
                    <div id="toolbar" class="btn-group">
                        <button id="btn_add" type="button" class="btn btn-default" v-on:click="Add">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
                        </button>
                        <button id="btn_edit" type="button" class="btn btn-default" v-on:click="Modify" v-bind:disabled="IsSModify">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
                        </button>
                        <button id="btn_delete" type="button" class="btn btn-default" v-on:click="Delete" v-bind:disabled="IsSDelete">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
                        </button>
                    </div>
                    <table id="tblAttribute"></table>
                </div>
            </div>

        </div>
        <div class="tab-pane fade" id="Routine">
            <div>

                <div class="panel-body">
                    <div id="Routinetoolbar" class="btn-group">
                        <button type="button" class="btn btn-default" v-on:click="Add">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
                        </button>
                        <button type="button" class="btn btn-default" v-on:click="Modify" v-bind:disabled="IsRModify">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
                        </button>
                        <button type="button" class="btn btn-default" v-on:click="Delete" v-bind:disabled="IsRDelete">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
                        </button>
                    </div>
                    <table id="tblRoutineAttr"></table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">
        layui.use(['miniTab'], function () {
            var layer = layui.layer,
                miniTab = layui.miniTab;
        });
        var tabId = self.frameElement.parentElement.id;
        var vm = new Vue({
            el: "#app",
            data: {
                condition: {
                    Desc: "",
                    IsInv: true
                },
                AttrID: WS.GuidEmpty,
                AttrItemID: WS.GuidEmpty,
                SubAttriTitle: "",
                action: "",
                subAction: "",
                IsSModify: true,
                IsSDelete: true,
                IsRModify: true,
                IsRDelete: true,
            },
            methods: {

                TabClick: function (index) {
                    if (index == 0) {
                        vm.condition.IsInv = true;
                    } else {
                        vm.condition.IsInv = false;
                    }
                    vm.Search();
                },
                Search: function () {
                    if (vm.condition.IsInv == true) {
                        $("#tblAttribute").bootstrapTable("refresh", { url: "/adminapi/ProdAttribute/Search", pageNumber: 1 });
                        //$('#tblAttribute').bootstrapTable('refreshOptions', { pageNumber: 1 });
                    }
                    else {
                        $("#tblRoutineAttr").bootstrapTable("refresh", { url: "/adminapi/ProdAttribute/Search", pageNumber: 1 });
                        //$('#tblRoutineAttr').bootstrapTable('refreshOptions', { pageNumber: 1 });
                    }


                },
                Add: function () {
                    vm.action = "Add";
                    vm.AttrID = WS.GuidEmpty;
                    miniTab.openNewTabByIframe({
                        href:"/Product/EditAttribute/" + vm.AttrID + "/" + vm.condition.IsInv,
                        title: '@BDMall.Resources.Label.AddAttribute',
                        callback: vm.Search
                    });
                },
                Modify: function () {

                    var a;
                    if (vm.condition.IsInv == true) {
                        a = $("#tblAttribute").bootstrapTable('getSelections');
                    }
                    else {
                        a = $("#tblRoutineAttr").bootstrapTable('getSelections');
                    }

                    var selected = a[0];
                    vm.action = "Modify";
                    vm.AttrID = selected.Id;


                    //parent.setSrcTobTab("AttributeAdd", "@BDMall.Resources.Label.AddAttribute", "/Product/AttributeEdit/" + vm.AttrID + "/" + vm.condition.IsInv, true, true);
                    miniTab.openNewTabByIframe({
                        href:"/Product/EditAttribute/" + vm.AttrID + "/" + vm.condition.IsInv,
                        title: '@BDMall.Resources.Action.Modify' + '-' + a[0].Desc,
                        callback: vm.Search
                    });
                },
                Delete: function () {
                    var a;
                    if (vm.condition.IsInv == true) {
                        a = $("#tblAttribute").bootstrapTable('getSelections');
                    }
                    else {
                        a = $("#tblRoutineAttr").bootstrapTable('getSelections');
                    }
                    if (a.length > 0) {
                        SystemConfirm('@BDMall.Resources.Message.DeleteConfirm', function () {

                            var listindex = "";

                            for (var i = 0; i < a.length; i++) {
                                if (listindex == "") {
                                    listindex = a[i].Id;
                                }
                                else {
                                    listindex += "," + a[i].Id;
                                }

                            }

                            var data = new Object();
                            data.idList = listindex;
                            WS.AjaxP("get", "/adminapi/ProdAttribute/CheckAttrIsUsed", data, function (response) {
                                if (!response) {
                                    WS.AjaxP("get", "/adminapi/ProdAttribute/Delete", data, function (response) {
                                        if (response.Succeeded == true) {
                                            vm.Search();
                                        }
                                        else {
                                            showWarn(response.Message);
                                        }

                                    }, function () { })
                                }
                                else {
                                    showWarn("@BDMall.Resources.Message.AttributeIsUsed");
                                }
                            }, function () { });
                        });
                    } else {
                        showWarn('@BDMall.Resources.Message.DeleteSelect');
                    }

                },
                SetSelfButtonState: function () {
                    var selected = $("#tblAttribute").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsSModify = false;
                    }
                    else {
                        vm.IsSModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsSDelete = false;
                    }
                    else {
                        vm.IsSDelete = true;
                    }
                },
                SetRouteButtonState: function () {
                    var selected = $("#tblRoutineAttr").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsRModify = false;
                    }
                    else {
                        vm.IsRModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsRDelete = false;
                    }
                    else {
                        vm.IsRDelete = true;
                    }
                }
            }
        });


        var SelfAttrTableInit = function () {

            var oTableInit = new Object();
            oTableInit.Init = function () {

                $("#tblAttribute").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    //url: '/adminapi/ProdAttribute/GetSelfDefineAttribute',         //请求后台的URL（*）
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: true,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    dataField: "Data",
                    totalField: "TotalRecord",
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onLoadSuccess: function () {
                        vm.SetSelfButtonState();
                    },
                    onCheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onUncheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                    columns: [{
                        checkbox: true
                    },
                    {
                        field: 'Id',
                        title: 'id',
                        visible: false
                    },
                    {
                        field: 'Code',
                        title: '@BDMall.Resources.Label.AttributeCode',
                        sortable: true,

                    },
                    {
                        field: 'Desc',
                        title: '@BDMall.Resources.Label.Desc',
                        sortable: true,

                    },
                @*{
                    field: 'IsBatchOrder',
                    title: '@BDMall.Resources.Label.IsBatchOrder'
                }*@]
                });
            };

            oTableInit.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }

                var sortedBy = params.sort;
                var sorted = params.order;

                vm.condition.Desc = $("#txtAttributeName").val();
                vm.condition.IsInv = vm.condition.IsInv;
                vm.condition.PageInfo = { Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted };

                return vm.condition;
                //return {
                //    Desc: $("#txtAttributeName").val(),
                //    IsInv: vm.condition.IsInv,
                //    limit: params.limit,
                //    offset: params.offset
                //};
            }
            return oTableInit;
        }

        var RoutineAttrTableInit = function () {

            var rTableInit = new Object();
            rTableInit.Init = function () {

                $("#tblRoutineAttr").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    //url: '/adminapi/ProdAttribute/GetSelfDefineAttribute',         //请求后台的URL（*）
                    queryParams: rTableInit.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#Routinetoolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: true,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    dataField: "Data",
                    totalField: "TotalRecord",
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onCheck: function (row) {
                        vm.SetRouteButtonState();
                    },
                    onUncheck: function (row) {
                        vm.SetRouteButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.SetRouteButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.SetRouteButtonState();
                    },
                    columns: [{
                        checkbox: true
                    },
                    //{
                    //    field: 'Id',
                    //    title: 'id',
                    //    visible: false
                    //},
                    {
                        field: 'Code',
                        title: '@BDMall.Resources.Label.AttributeCode',
                        sortable: true,

                    }, {
                        field: 'Desc',
                        title: '@BDMall.Resources.Label.AttributeCode',
                        sortable: true,
                    }]
                });
            };

            rTableInit.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }
                var sortedBy = params.sort;
                var sorted = params.order;

                vm.condition.Desc = $("#txtAttributeName").val();
                vm.condition.IsInv = vm.condition.IsInv;
                vm.condition.PageInfo = { Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted };

                return vm.condition;
            }
            return rTableInit;
        }

        function SubClose() {
            CleanSubAttribute();
            $('#myModal').unblock();
        }

        function CleanAttribute() {

        }
        $(document).ajaxStart(function () {
            showLoading();
        });
        $(document).ajaxStop(function () {
            hideLoading();
        });
        function CleanSubAttribute() {
            $("#txtSubAttriCode").val("");
            $("#SubDesc_e").val("");
            $("#SubDesc_c").val("");
            $("#SubDesc_s").val("");
            $("#SubDesc_j").val("");
            $("#txtSubAttriCode").focus();

        }


        function InitModal() {
            $('#myModal').modal({ backdrop: 'static', keyboard: false, show: false })
        }

        $(document).ready(function () {

            //InitTable();
            InitModal();
            var oTable = SelfAttrTableInit();
            oTable.Init();
            var rTable = RoutineAttrTableInit();
            rTable.Init();

            vm.TabClick(1);
            vm.TabClick(0);

            //BindAttributeGrid();
        });
    </script>
}

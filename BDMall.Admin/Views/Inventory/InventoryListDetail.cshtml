
@{
    ViewBag.Title = "InventoryListDetail";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="divMain" v-cloak>
    <div id="divHeader" class="panel-group">
        <div class="form-group col-sm-12 form-inline">
            <label for="txtProductCode" class="control-label col-sm-1">@BDMall.Resources.Label.ProductCode</label>
            <div class="col-sm-3">
                <input type="text" class="form-control" id="txtProductCode" v-model="ProductCode" readonly>
            </div>
        </div>
    </div>
    <div id="divDataArea" class="tab-content">
        <table id="tblInventoryDetailList" class="table table-condensed"></table>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        var mProdCode = "@ViewBag.ProductCode";
        var mIsMerchant = @ViewBag.IsMerchant;

        var vm = new Vue({
            el: "#divMain",
            data: {
                ProductCode: mProdCode,
                Condition: {
                    ProductCode: mProdCode
                }
            },
            methods: {
                searchInventoryDetailList: function () {
                    $("#tblInventoryDetailList").bootstrapTable("refresh", { url: "/adminapi/Inventory/GetInventoryDetailByProdCD" });
                }
            }
        });

        var inventoryDetailListTableInit = function () {
            var objDataTable = new Object();

            objDataTable.Init = function () {
                $("#tblInventoryDetailList").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    queryParams: objDataTable.queryParams,//传递参数（*）
                    toolbar: '#divToolBar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: true,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: false,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 750,                        //行高，如果没有设置height属性，表格自动根据记录条数決定表格高度
                    uniqueId: "SKU",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onCheck: function (row) {//選中項
                    },
                    onUncheck: function (row) {//取消選中項
                    },
                    onCheckAll: function (rows) {//選中全部項
                    },
                    onUncheckAll: function (rows) {//取消選中全部項
                    },
                    columns: [{
                            field: 'SKU',
                            title: 'SKU',
                            visible: false
                    }, {
                            field: 'ImgPath',
                            title: '@BDMall.Resources.Label.Img',
                            formatter: function (value, row, index) {
                                return '<img  src="' + value + '" width="64" >';
                            }
                    }, {
                            field: 'ProductCode',
                            title: '@BDMall.Resources.Label.ProductCode',
                            align: 'left',
                            valign: 'middle'
                    }, {
                            field: 'ProductName',
                            title: '@BDMall.Resources.Label.ProductName',
                            align: 'left',
                            valign: 'middle'
                    }, {
                            field: 'AttrVal1Desc',
                            title: '@BDMall.Resources.Label.StockAttributeI',
                            align: 'left',
                            valign: 'middle'
                    }, {
                            field: 'AttrVal2Desc',
                            title: '@BDMall.Resources.Label.StockAttributeII',
                            align: 'left',
                            valign: 'middle'
                    }, {
                            field: 'AttrVal3Desc',
                            title: '@BDMall.Resources.Label.StockAttributeIII',
                            align: 'left',
                            valign: 'middle'
                    }, {
                            field: 'InventorySumQty',
                            valign: 'middle',
                            title: '@BDMall.Resources.Label.InventoryTotalQty'
                    }, {
                            field: 'ReservedQty',
                            valign: 'middle',
                            title: '@BDMall.Resources.Label.PreSellTotalQty'
                    }, {
                            field: 'SalesQty',
                            valign: 'middle',
                            title: '@BDMall.Resources.Label.SalesTotalQty'
                    }, {
                            field: 'LocName',
                            valign: 'middle',
                            title: '@BDMall.Resources.Label.WarehouseName'
                    }],
                    formatLoadingMessage: function () {
                        return '';
                    }
                });
            };

            objDataTable.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }
                var SortedBy = "ProductName";
                var Sorted = "asc";
                return {
                    Condition: vm.Condition, Page: page, PageSize: params.limit, sortName: SortedBy, sortOrder: Sorted
                };
            }
            return objDataTable;
        }

        $(document).ready(function () {
            var objDataTable = inventoryDetailListTableInit();
            objDataTable.Init();

            vm.searchInventoryDetailList();
        });

        $(document).ajaxStart(function () {
            showLoading();
        });

        $(document).ajaxStop(function () {
            hideLoading();
        });
    </script>
}


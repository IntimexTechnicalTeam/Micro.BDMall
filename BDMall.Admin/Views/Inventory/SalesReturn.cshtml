
@{
    ViewBag.Title = "SalesReturn";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="divMain" v-cloak>
    <div id="divSearchBar" class="panel-group">
        <div class="form-horizontal">
            <div class="form-group col-sm-12">
                <label for="txtOrderNum" class="control-label col-sm-1">@BDMall.Resources.Label.Order</label>
                <div class="col-sm-4">
                    <input type="text" class="form-control" id="txtOrderNum" v-model="Condition.OrderNum">
                </div>
                <div class="col-sm-2">
                    <input type="button" class="btn btn-primary" value="@BDMall.Resources.Action.Import" v-on:click="searchSalesReturnItems" v-bind:disabled="!isMerchant" />
                </div>
            </div>
        </div>
    </div>
    <div class="panel-group">
        <div class="form-group col-sm-12">
        </div>
    </div>
    <div id="divDataArea" class="tab-content">
        <div id="divSelfDefine" class="tab-pane fade in active">
            <div class="panel-body">
                <div class="form-horizontal" v-show="IsEnabledResult">
                    <div class="form-group col-sm-12">
                        <p class="bg-primary">@BDMall.Resources.Label.PanelNameDetail</p>
                    </div>
                    <div class="form-group col-sm-12">
                        <table id="tblSalesReturnItemsListVue" class="table table-bordered">
                            <tbody>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="cbxFlowTypeAll" v-model="IsCheckAllItems" v-on:change="checkAllItems" />
                                    </th>
                                    <th>@BDMall.Resources.Label.ProductName</th>
                                    <th>@BDMall.Resources.Label.StockAttributeI</th>
                                    <th>@BDMall.Resources.Label.StockAttributeII</th>
                                    <th>@BDMall.Resources.Label.StockAttributeIII</th>
                                    <th>@BDMall.Resources.Label.Qty</th>
                                    <th>@BDMall.Resources.Label.SalesReturnQty</th>
                                    <th>@BDMall.Resources.Label.UnitPrice</th>
                                    <th>@BDMall.Resources.Label.SubTotal</th>
                                    <th></th>
                                </tr>
                                <tr v-for="(item,index) in Items">
                                    <td>
                                        <input type="checkbox" id="cbxFlowTypw" value="{{ index }}" v-model="item.IsChecked" />
                                    </td>
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.Attr1Desc}}</td>
                                    <td>{{item.Attr2Desc}}</td>
                                    <td>{{item.Attr3Desc}}</td>
                                    <td>
                                        <input type="number" v-model="item.ReturnQty" v-bind:value="item.ReturnQty" v-if="item.EditState" max={{item.OrderQty}} min="0" />
                                        <label v-model="item.ReturnQty" v-else="item.EditState">{{item.ReturnQty}}</label>
                                    </td>
                                    <td>{{item.OrderQty}}</td>
                                    <td>{{item.UnitPrice}}</td>
                                    <td>{{item.Subtotal}}</td>
                                    <td>
                                        <button id="btnEdit" type="button" class="btn btn-default" v-show="!item.EditState" v-on:click="setItemEditState(index,true)">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                        </button>
                                        <button id="btnSave" type="button" class="btn btn-default" v-show="item.EditState" v-on:click="setItemEditState(index,false)">
                                            <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="form-group col-sm-12">
                        <p class="bg-primary">@BDMall.Resources.Label.PanelNameBaseInfo</p>
                    </div>
                    <div class="form-group col-sm-12">
                        <label for="txtHandler" class="control-label col-sm-1">@BDMall.Resources.Label.Handler</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="txtHandler" v-model="HandlerName" readonly>
                        </div>
                        <label for="txtCustomerName" class="control-label col-sm-1">@BDMall.Resources.Label.CustomerName</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="txtCustomerName" v-model="CustomerName" readonly>
                        </div>
                    </div>
                    <div class="form-group col-sm-12">
                        <label for="cboWarehouse" class="control-label col-sm-1 text-danger">*@BDMall.Resources.Label.WarehouseName</label>
                        <div class="col-sm-4">
                            <select id="cboWarehouse" class="form-control" v-model="Warehouse"></select>
                        </div>
                        <label for="txtReturnDate" class="control-label col-sm-1 text-danger">*@BDMall.Resources.Label.SalesReturnDate</label>
                        <div class="col-sm-4">
                            <input name="DateTimePicker" type="text" class="form-control" id="txtReturnDate">
                        </div>
                    </div>
                    <div class="col-sm-12 modal-footer">
                            <input type="button" class="btn btn-primary btn-action-default" value="@BDMall.Resources.Action.Save" v-on:click="saveSalesReturnItems" v-bind:disabled="!isMerchant" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="divOperation">
    </div>
</div>

@section scripts{
    <script src="~/Scripts/vue/RelationCombobox.js"></script>

    <script type="text/javascript">
        var mIsMerchant = @ViewBag.IsMerchant;

        var vm = new Vue({
            el: "#divMain",
            data: {
                OrderNumber: "",
                SOId: "00000000-0000-0000-0000-000000000000",
                CustomerName: "",
                HandlerName: "",
                ReturnDate: "",
                Warehouse: "-1",
                //UserAuth: false,
                IsEnabledResult: false,
                IsCheckAllItems: false,
                isMerchant: mIsMerchant,
                CheckedItemQty: 0,
                Condition: {
                    OrderNum: ""
                },
                Items: [{
                    OrderNumber: "",
                    SOId:"00000000-0000-0000-0000-000000000000",
                    SKU: "",
                    CustomerID: "",
                    ProductName: "",
                    Attr1: 0,
                    Attr2: 0,
                    Attr3: 0,
                    Attr1Desc: "",
                    Attr2Desc: "",
                    Attr3Desc: "",
                    OrderQty: 0,
                    ReturnQty: 0,
                    UnitPrice: 0,
                    Subtotal: 0,
                    EditState: false,
                    IsChecked: false
                }]
            },
            methods: {
                checkAllItems: function () {
                    vm.Items.forEach(function (item, val) {
                        item.IsChecked = vm.IsCheckAllItems;
                    });
                },
                setItemEditState: function (index, state) {
                    if (!state) {
                        //取消編輯狀態時，需檢查退回數量是否大於訂單數量，并重新計算小計數
                        var returnQty = vm.Items[index].ReturnQty;
                        var orderQty = vm.Items[index].OrderQty;
                        var unitPrice = vm.Items[index].UnitPrice;
                        if (returnQty <= orderQty && returnQty >= 0) {
                            vm.Items[index].EditState = state;
                            vm.Items[index].Subtotal = returnQty * unitPrice;
                            Vue.set(vm.Items, index, vm.Items[index]);
                        }
                        else if (returnQty > orderQty) {
                            showWarn('@BDMall.Resources.Message.SalesReturnQtyOverrun');
                        }
                        else {
                            showWarn('@BDMall.Resources.Message.SalesReturnQtySufficient');
                        }
                    }
                    else {
                        vm.Items[index].EditState = state;
                        Vue.set(vm.Items, index, vm.Items[index]);
                    }

                },
                searchSalesReturnItems: function () {
                    var data = new Object();
                    data.Condition = vm.Condition;
                    WS.AjaxP("post", "/AdminAPI/Inventory/GetSalesReturnItmLstByOrdrNbr", data, function (response) {
                        vm.Items = response;
                        if (vm.Items.length > 0) {
                            vm.CustomerName = response[0].CustomerName;
                            vm.HandlerName = response[0].HandlerName;
                            vm.OrderNumber = response[0].OrderNumber;
                            vm.SOId = response[0].SOId;
                            vm.IsEnabledResult = true;

                            vm.Items.forEach(function (item, val) {
                                item.IsChecked = false;
                                item.EditState = false;
                                item.Subtotal = 0;
                            });
                        }
                        else {
                            vm.IsEnabledResult = false;
                            showInfo('@BDMall.Resources.Message.NoRecord');
                        }

                    }, function () {
                    });
                },
                saveSalesReturnItems: function () {
                    var strReturnDate = $("#txtReturnDate").val();
                    if (strReturnDate == "" || strReturnDate == undefined) {
                        //日期不能為空
                        showWarn('@BDMall.Resources.Message.SalesReturnDateRequire');
                    }
                    else {
                        if (vm.Warehouse != "-1" && vm.Warehouse != "" && vm.Warehouse != undefined) {

                            var iQtyChecked = 0;//選中項數量
                            var iQtyEditing = 0;//編輯中的項數量
                            var iQtyZeroReturn = 0;//選中且退回數量為零的項數量
                            var iQtyOverrunReturn = 0;//選中且退回數量大於訂單數的項數量
                            vm.Items.forEach(function (item, val) {
                                if (item.IsChecked) {
                                    iQtyChecked = iQtyChecked + 1;
                                    if (item.ReturnQty <= 0) {
                                        iQtyZeroReturn = iQtyZeroReturn + 1;
                                    }
                                    else if (item.ReturnQty > item.OrderQty) {
                                        iQtyOverrunReturn = iQtyOverrunReturn + 1;
                                    }
                                }
                                if (item.EditState) {
                                    iQtyEditing = iQtyEditing + 1;
                                }
                            });

                            if (iQtyChecked < 1) {
                                showWarn('@BDMall.Resources.Message.OneSelect');
                                return;
                            }
                            if (iQtyEditing > 0) {
                                showWarn('@BDMall.Resources.Message.PleaseCancelEditStatus');
                                return;
                            }
                            if (iQtyZeroReturn > 0) {
                                showWarn('@BDMall.Resources.Message.SalesReturnQtySufficient');
                                return;
                            }
                            if (iQtyOverrunReturn > 0) {
                                showWarn('@BDMall.Resources.Message.SalesReturnQtyOverrun');
                                return;
                            }

                            var objSaveData = new Object();
                            objSaveData.SOId = vm.SOId;
                            objSaveData.OrderNumber = vm.OrderNumber;
                            objSaveData.HandlerName = vm.HandlerName;
                            objSaveData.ReturnDate = strReturnDate;
                            objSaveData.WarehouseID = vm.Warehouse;
                            objSaveData.SalesReturnItemList = vm.Items;

                            WS.AjaxP("post", "/adminapi/Inventory/SaveSalesRtnRec", objSaveData, function (response) {
                                if (response.Succeeded == true) {

                                    vm.IsEnabledResult = false;
                                    vm.Warehouse = "-1";
                                    showInfo('@BDMall.Resources.Message.SaveSuccess');
                                }
                                else {
                                    showWarn('@BDMall.Resources.Message.SaveFail' + "\n\n" + response.Message);
                                }
                            }, function () { })
                        }
                        else {
                            //倉庫不能為空
                            showWarn('@BDMall.Resources.Message.PleaseSelectWarehouse');
                        }
                    }
                }
            }
        });

        //獲取頁面的初始緩存數據
        function getSalesReturnCaches() {
            WS.AjaxP("get", "/AdminAPI/Inventory/GetSalesRtnPageCaches", null, function (response) {
                InitNormalSelectByData("cboWarehouse", response.WarehouseList);
            }, function () {
            });
        }

        $(document).ready(function () {

            InitDateTimePicker();

            getSalesReturnCaches();

            //鍵盤按下回車後進行搜尋操作
            $("#txtOrderNum").keyup(function (e) {
                if (e.keyCode == 13) {
                    vm.searchSalesReturnItems();
                }
            });
        });

        $(document).ajaxStart(function () {
            showLoading();
        });

        $(document).ajaxStop(function () {
            hideLoading();
        });
    </script>
}



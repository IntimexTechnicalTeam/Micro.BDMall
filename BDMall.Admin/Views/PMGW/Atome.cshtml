
@{
    ViewBag.Title = "Atome";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid" id="app">
    <form class="form-horizontal" id="appform">
        <div class="form-group">
            <label for="apiKey" class="col-sm-2 control-label">ApiKey</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="apiKey" name="apiKey" v-model="model.ApiKey" required>
            </div>
        </div>
        <div class="form-group">
            <label for="password" class="col-sm-2 control-label">Password</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="password" name="password" required v-model="model.Password">
            </div>
        </div>
        <div class="form-group">
            <label for="url" class="col-sm-2 control-label">url</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="url" name="url" required v-model="model.Url">
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary" v-on:click="save">@BDMall.Resources.Action.Save</button>
                <button type="reset" class="btn btn-warn" v-on:click="reset">@BDMall.Resources.Action.Reset</button>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script type="text/javascript">

        $.validator.setDefaults({
            debug: true,
            submitHandler: function (form) {
                // alert("提交事件!");
            }
        });




        var app = new Vue({
            el: "#app",
            data: {
                model: {
                    merchantId: "",
                    merchantName: "",
                    key: ""
                },
                validater: {}
            },
            methods: {
                initValidater: function () {
                    this.validater = $("#appform").validate({
                        debug: true,
                        rules: {
                            apiKey: {
                                required: true
                            },
                            password: {
                                required: true
                            },
                            url: {
                                required: true
                            }
                        },
                        messages: {
                            apiKey: {
                                required: "please input apiKey!!!"
                            },
                            password: {
                                required: "please input password!!!"
                            },
                            url: {
                                required: "please input url!!!"
                            }
                        },
                        submitHandler: function (form) {
                            //alert("提交事件2!");
                        }
                    });
                },
                save: function () {
                    if (this.validater.form()) {
                        WS.AjaxP("post", "/adminapi/paymentgateway/SaveAtomeConfig", this.model, function (result, status) {
                            if (result.Succeeded) {
                                showInfo( "@BDMall.Resources.Message.SaveSuccess");
                            }
                        }, function () {
                        })
                    }
                },
                reset: function () {
                    this.validater.resetForm();
                    this.load();
                },
                load: function () {
                    WS.AjaxP("get", "/adminapi/paymentgateway/GetConfig", { type: "Atome" }, function (result, status) {
                        if (result.Succeeded) {
                            app.model = result.ReturnValue;
                        }
                    }, function () {
                    })

                }
            },
            mounted: function () {
                this.initValidater();
            }

        });
        app.load();



    </script>

}
@{
    ViewBag.Title = "Expressage";
    Layout = "~/Views/Shared/_LayoutEditor.cshtml";
}

<div id="app">
    @*<table class="table table-condensed">
        <tr>
            <td class="col-md-2 form-inline">
                CCode
                <select class="form-control" style="width:300px;">
                    <option>SF</option>
                    <option>Local</option>
                </select>
                <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Search" v-on:click="SearchData" />
            </td>
        </tr>
    </table>*@
    <div id="myTabContent" class="tab-content">
        <div id="toolbar" class="btn-group">
            <button id="btn_add" type="button" class="btn btn-default" v-on:click="Add">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
            </button>
            <button id="btn_edit" type="button" class="btn btn-default" v-on:click="Modify" v-bind:disabled="IsModify">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
            </button>
            <button id="btn_delete" type="button" class="btn btn-default" v-on:click="Delete" v-bind:disabled="IsDelete">
                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
            </button>
        </div>
        <table id="tblAttribute"></table>
    </div>
    <div id="myModal2" style="display:none;">
        <div class="modal-header">
            <span>@BDMall.Resources.Label.ExpressCompany</span>
        </div>
        <form id="contentForm">
            <table style="width:100%;">
                <tr>
                    <td>
                        <div class="form-inline">
                            <label for="CatalogCode" class="col-md-6 text-left">公司code<span style="color:red;">*</span></label>
                            <input type="text" class="form-control col-md-6" v-model="items.CCode" name="'CCode" maxlength="10" required />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-inline">
                            <label for="CatalogCode" class="col-md-6 text-left">类型code<span style="color:red;">*</span></label>
                            <select v-model="items.TCode" name="'TCode" class="form-control col-md-6">
                                <option value="D">送货上门</option>
                                <option value="Z">智能柜</option>
                                <option value="P">便利店</option>
                                <option value="S">门店或地铁站自取</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-inline">
                            <label for="CatalogCode" class="col-md-6 text-left">@BDMall.Resources.Label.ExpressCode<span style="color:red;">*</span></label>
                            <input type="text" class="form-control col-md-6" v-model="items.Code" name="'ExCode" maxlength="10" required />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div v-for="item in items.Names" class="form-inline">
                            <label class="col-md-6 text-left">@BDMall.Resources.Label.ExpressName ({{item.Lang.Text}})<span style="color:red;">*</span></label>
                            <input type="text" class="form-control col-md-6" v-bind:id="'ExName'+item.Lang.Code" v-bind:name="'ExName_'+item.Lang.Code" v-model="item.Desc" required />
                        </div>
                    </td>
                </tr>
                @*<tr>
                        <td>
                            <div class="form-inline">
                                <label for="CatalogCode" class="col-md-6 text-left">@BDMall.Resources.Label.Discount</label>
                                <input type="text" class="form-control col-md-6" v-model="items.Discount" id="txtDiscount" maxlength="5" />
                            </div>
                        </td>
                    </tr>*@

                <tr>
                    <td>
                        <label for="CatalogCode" class="col-md-6 text-left">@BDMall.Resources.Label.Country</label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-inline">
                            <select multiple="multiple" name="country" class="demo1 col-md-6" style="width:100%" v-model="items.CountryIds">
                                <option v-for="c in country" v-bind:value="c.Id">{{c.Text}}</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-inline text-left">
                            <label for="CatalogCode">调用api</label>
                            <input type="checkbox" v-model="items.UseApi" id="txtActive" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-inline text-left">
                            <label for="CatalogCode">@BDMall.Resources.Label.IsActive</label>
                            <input type="checkbox" v-model="items.IsActive" id="txtActive" />
                        </div>
                    </td>
                </tr>
            </table>
        </form>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" v-on:click="Close">@BDMall.Resources.Action.Close</button>
            <button type="button" class="btn btn-primary" v-on:click="checkSave">@BDMall.Resources.Action.Save</button>
        </div>

    </div>
</div>
@section scripts{

    <style type="text/css">
        select#bootstrap-duallistbox-selected-list_country, select#bootstrap-duallistbox-nonselected-list_country {
            width: 100%;
        }
    </style>
    <link href="~/Scripts/bootstrap-duallistbox-master/css/bootstrap-duallistbox.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-duallistbox-master/js/jquery.bootstrap-duallistbox.min.js"></script>

    <script type="text/javascript">
        var formValidate;
        var vm = new Vue({
            el: "#app",
            data: {
                SubAttriTitle: "",
                AttrType: 1,
                action: "",
                subAction: "",
                IsModify: true,
                IsDelete: true,
                IsDelete: true,
                items: {
                    Code: "",
                    Id: "00000000-0000-0000-0000-000000000000",
                    Discount: 0,
                    Names: [{ Lang: { Text: "", Code: "" }, Desc: "" }],
                    IsActive: true,
                    CountryIds:[]
                },
                exInfo: {
                    MerchantId: "00000000-0000-0000-0000-000000000000",
                    Code: "",
                    Name: ""
                },
                country: [],
                Langs: []
            },
            methods: {
                InitCountry:function(){
                    WS.AjaxP("get", "/adminapi/Delivery/GetCountryForExpress", null, function (a) {
                        vm.country = a;
                    }, function () { });
                },
                InitExpressItem: function () {
                    cleanSelect();
                        var data = new Object();
                        data.id = vm.items.Id;
                        WS.AjaxP("get", "/adminapi/Delivery/GetExpressItem", data, function (response) {
                            vm.items = response;
                            vm.$nextTick(function () {
                                var selector = $('.demo1').bootstrapDualListbox();//初始化组件
                                console.log(vm.items.CountryIds);
                                if (vm.items.CountryIds!=[])
                                {
                                    $.each(vm.items.CountryIds, function (i, val) {
                                        console.log(val);
                                        $(".demo1 option[value='" + val + "']").attr("selected", "selected");
                                    });
                                    selector.bootstrapDualListbox('refresh');
                                }

                            })
                        }, function () { });



                   // InitNormalSelect("bootstrap-duallistbox-nonselected-list_duallistbox_demo1", "/adminapi/Delivery/GetExpressCompany", true);

                },
                Search: function () {
                    WS.AjaxP("get", "/adminapi/Delivery/GetLangs", null, function (response) {
                        vm.Langs = response;
                        HideTableColumn();
                        //$("#tblAttribute").bootstrapTable("refresh", { url: "/adminapi/Delivery/GetExpress" });
                        $("#tblAttribute").bootstrapTable("refresh", { url: "/AdminAPI/Delivery/GetExpress", pageNumber: 1 });
                    }, function () { });

                },
                Add: function () {
                    vm.subAction = "Add";
                    //vm.SubAttriTitle = "@BDMall.Resources.Label.Add-@BDMall.Resources.Label.ExpressCompany";
                    vm.items.Id = "00000000-0000-0000-0000-000000000000";
                    vm.InitExpressItem();
                    show2Modal();
                },
                Modify: function () {

                    var a = $("#tblAttribute").bootstrapTable('getSelections');
                    vm.action = "Modify";
                    //vm.SubAttriTitle = "@BDMall.Resources.Label.Edit-@BDMall.Resources.Label.ExpressCompany";
                    vm.items.Id = a[0].Id;
                    vm.InitExpressItem();
                    show2Modal();
                },
                Delete: function () {
                        var selects = $("#tblAttribute").bootstrapTable('getSelections');

                    SystemConfirm('@BDMall.Resources.Message.DeleteConfirm', function () {

                        var strSkus = "";
                        for (var i = 0; i < selects.length; i++) {
                            if (strSkus == "") {
                                strSkus = selects[i].Id;
                            }
                            else {
                                strSkus += "," + selects[i].Id;
                            }

                        }
                        var data = new Object();
                        data.skus = strSkus;
                        WS.AjaxP("get", "/adminapi/Delivery/ExpressDelete", data, function (response) {
                            if (response.Succeeded == true) {
                                showWarn('@BDMall.Resources.Message.DeleteSucceeded');
                                vm.Search();
                            }
                            else {
                                showWarn(response.Message);
                            }
                        }, function () { });
                    });

                },
                Close: function () {
                    CleanSubAttribute();
                    $('#app').unblock();
                },
                Save: function () {

                    vm.items.CountryIds = $('[name="country"]').val();
                    WS.AjaxP("post", "/adminapi/Delivery/SaveExpress", vm.items, function (response) {
                        if (response.Succeeded == true) {
                            vm.Close();
                            showWarn('@BDMall.Resources.Message.SaveSuccess');
                            vm.Search();
                        }
                        else {
                            showWarn(response.Message);
                        }
                    }, function () { })
                },
                checkSave:function(){
                    if(formValidate.form())
                    {
                        $("#contentForm").submit();
                    }
                },
                SetSelfButtonState: function () {
                    var selected = $("#tblAttribute").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsModify = false;
                    }
                    else {
                        vm.IsModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsDelete = false;
                    }
                    else {
                        vm.IsDelete = true;
                    }
                }
            },
        });


        var SelfAttrTableInit = function () {

            var oTableInit = new Object();
            oTableInit.Init = function () {

                $("#tblAttribute").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    //url: '/AdminAPI/Delivery/GetExpress',         //请求后台的URL（*）
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    singleSelect: true,
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    dataField: "Data",
                    totalField: "TotalRecord",
                    ajaxOptions:{
                        beforeSend: function (request)
                        {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onCheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onUncheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                   columns: [{
                        checkbox: true
                    }, {
                        field: 'Id',
                        title: 'id',
                        visible: false,
                    }, {
                        field: 'CCode',
                        sortable: true,
                        title: 'CCode',

                    }, {
                        field: 'TCode',
                        sortable: true,
                        title: 'TCode',

                    }, {
                        field: 'Code',
                        sortable: true,
                        title: '@BDMall.Resources.Label.ExpressCode',

                    }, {
                        field: 'Name',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Name',

                    },  {
                            field: 'IsActive',
                            sortable: true,
                            title: 'IsActive',

                        },
                    ]
                });
            };

            oTableInit.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }

                var sorted = params.order;
                var sortedBy = "";
                vm.exInfo.PageInfo = { Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted };

                return vm.exInfo;
                //return {
                //};
            }
            return oTableInit;
        }

        function SubClose() {
            CleanSubAttribute();
            $('#myModal').unblock();
        }

        function CleanAttribute() {

        }

        function CleanSubAttribute() {
            $("#txtSubAttriCode").val("");
            $("#SubDesc_e").val("");
            $("#SubDesc_c").val("");
            $("#SubDesc_s").val("");
            $("#SubDesc_j").val("");
            $("#txtSubAttriCode").focus();
        }

        function show2Modal() {
            $("#app").block({
                message: $('#myModal2'),
                css: {
                    'width': '700px',
                    'border': '1px',
                    'border-radius': '6px',
                    'box-shadow': '0 5px 15px rgba(0,0,0,.5)',
                    'cursor': 'default'
                },
                overlayCSS: { backgroundColor: '#000', opacity: '0.6', cursor: 'defalut' }
            });
        }
        function HideTableColumn() {
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_e');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_c');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_s');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_j');
            console.log("b");
            vm.Langs.forEach(function (val) {
                if (val.Code == "E") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_e');
                }
                else if (val.Code == "C") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_c');
                }
                else if (val.Code == "S") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_s');
                }
                else if (val.Code == "J") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_j');
                }

            });

        }
        function InitModal() {
            $('#myModal').modal({ backdrop: 'static', keyboard: false, show: false })
        }
        function cleanSelect() {
            $("select").removeSelected();
        }
        jQuery.fn.removeSelected = function () {
            this.val("");
        };
        $(document).ready(function () {
            InitModal();
            var oTable = SelfAttrTableInit();
            oTable.Init();
            vm.InitCountry();
            vm.Search();
            formValidate = $("#contentForm").validate({
                ignore: "",
                submitHandler: function () {
                    vm.Save();
                },
                rules: {
                    ExCode: "required",
                    ExName: "required",
                },
                messages:
                {
                    ExCode: '@BDMall.Resources.Message.RequiredField',
                    ExName: '@BDMall.Resources.Message.RequiredField',
                },

                success: function (label) {
                    $(label).parent().removeClass('has-error');
                    //console.log(label);
                },
                showErrors: function (errorMap, errorList) {
                    // 此处注意，一定要调用默认方法，这样保证提示消息的默认效果
                    this.defaultShowErrors();
                }

            });
        });
    </script>
}

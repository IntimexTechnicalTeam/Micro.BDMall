@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="app">
    <table class="table">
        <tr>

            <td class="col-md-2">
                <form class="form-inline">
                    @BDMall.Resources.Label.CountryName
                    <input type="text" class="form-control" id="txtAttributeName" style="width:300px;" />
                    <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Search" v-on:click="Search" />
                </form>
            </td>
        </tr>

    </table>
    <div id="myTabContent" class="tab-content">
        <div id="toolbar" class="btn-group">
            <button id="btn_add" type="button" class="btn btn-default" v-on:click="Add">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
            </button>
            <button id="btn_edit" type="button" class="btn btn-default" v-on:click="Modify" v-bind:disabled="IsSModify">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
            </button>
            <button id="btn_delete" type="button" class="btn btn-default" v-on:click="Delete" v-bind:disabled="IsSDelete">
                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
            </button>
        </div>
        <table id="tblAttribute"></table>
    </div>

</div>


@section scripts{
    <script type="text/javascript">

        var vm = new Vue({
            el: "#app",
            data: {
                CountryID: 0,
                SubAttriTitle: "",
                AttrType: 1,
                action: "",
                subAction: "",
                IsSModify: true,
                IsSDelete: true,
                IsRModify: true,
                IsRDelete: true,
                Langs: []
            },
            methods: {

                TabClick: function (index) {
                    if (index == 0) {
                        vm.AttrType = 1;
                    } else {
                        vm.AttrType = 2;
                    }
                },
                Search: function () {


                    WS.AjaxP("get", "/adminapi/Delivery/GetLangs", null, function (response) {
                        vm.Langs = response;
                        HideTableColumn();
                        $("#tblAttribute").bootstrapTable("refresh", { url: "/adminapi/Delivery/GetCountry" });
                    }, function () { });


                },
                Add: function () {
                    vm.action = "Add";
                    vm.CountryID = 0;
                    miniTab.openNewTabByIframe({
                        href:"/Delivery/Province/0",
                        title: '@BDMall.Resources.Label.Add-@BDMall.Resources.Label.Country',
                        callback: vm.Search
                    });
                },
                Modify: function () {

                    var a = $("#tblAttribute").bootstrapTable('getSelections');
                    var selected = a[0];
                    vm.action = "Modify";
                    vm.CountryID = selected.Id;
                    miniTab.openNewTabByIframe({
                        href:"/Delivery/Province/" + vm.CountryID,
                        title: '@BDMall.Resources.Label.Edit-@BDMall.Resources.Label.Country',
                        callback: vm.Search
                    });
                },
                Delete: function () {
                    var selects = $("#tblAttribute").bootstrapTable('getSelections');

                    SystemConfirm('@BDMall.Resources.Message.DeleteConfirm', function () {

                        var strSkus = "";
                        for (var i = 0; i < selects.length; i++) {
                            if (strSkus == "") {
                                strSkus = selects[i].Id;
                            }
                            else {
                                strSkus += "," + selects[i].Id;
                            }

                        }
                        var data = new Object();
                        data.skus = strSkus;
                        WS.AjaxP("get", "/adminapi/Delivery/DeleteCountry", data, function (response) {
                            if (response.Succeeded == true) {
                                showWarn('@BDMall.Resources.Message.DeleteSucceeded');
                                vm.Search();
                            }
                            else {
                                showWarn(response.Message);
                            }
                        }, function () { });
                    });

                },
                SetSelfButtonState: function () {
                    var selected = $("#tblAttribute").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsSModify = false;
                    }
                    else {
                        vm.IsSModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsSDelete = false;
                    }
                    else {
                        vm.IsSDelete = true;
                    }
                },
                SetRouteButtonState: function () {
                    var selected = $("#tblRoutineAttr").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsRModify = false;
                    }
                    else {
                        vm.IsRModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsRDelete = false;
                    }
                    else {
                        vm.IsRDelete = true;
                    }
                }
            }
        });


        var SelfAttrTableInit = function () {

            var oTableInit = new Object();
            oTableInit.Init = function () {

                $("#tblAttribute").bootstrapTable({
                    method: 'get',                      //请求方式（*）
                    //url: '/adminapi/Attribute/GetSelfDefineAttribute',         //请求后台的URL（*）
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "id",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onCheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onUncheck: function (row) {
                        vm.SetSelfButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.SetSelfButtonState();
                    },
                    columns: [{
                        checkbox: true
                    }, {
                        field: 'Id',
                        title: 'id',
                        visible: false
                    }, {
                        field: 'Name_e',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Desc_e',

                    }, {
                        field: 'Name_c',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Desc_c'
                    }, {
                        field: 'Name_s',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Desc_s'
                    },
                {
                    field: 'Name_j',
                    sortable: true,
                    title: '@BDMall.Resources.Label.Desc_j'
                }]
                });
            };

            oTableInit.queryParams = function (params) {
                return {
                    name: $("#txtAttributeName").val(),
                };
            }
            return oTableInit;
        }

        function SubClose() {
            CleanSubAttribute();
            $('#myModal').unblock();
        }

        function CleanAttribute() {

        }

        function CleanSubAttribute() {
            $("#txtSubAttriCode").val("");
            $("#SubDesc_e").val("");
            $("#SubDesc_c").val("");
            $("#SubDesc_s").val("");
            $("#SubDesc_j").val("");
            $("#txtSubAttriCode").focus();

        }
        function HideTableColumn() {
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_e');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_c');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_s');
            $('#tblAttribute').bootstrapTable('hideColumn', 'Name_j');
            console.log("b");
            vm.Langs.forEach(function (val) {
                if (val.Code == "E") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_e');
                }
                else if (val.Code == "C") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_c');
                }
                else if (val.Code == "S") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_s');
                }
                else if (val.Code == "J") {
                    $('#tblAttribute').bootstrapTable('showColumn', 'Name_j');
                }

            });

        }


        function InitModal() {
            $('#myModal').modal({ backdrop: 'static', keyboard: false, show: false })
        }

        $(document).ready(function () {
            InitModal();
            var oTable = SelfAttrTableInit();
            oTable.Init();
            vm.Search();
        });
    </script>
}
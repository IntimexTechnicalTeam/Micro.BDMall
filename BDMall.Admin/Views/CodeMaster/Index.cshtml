
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="app" class="col-md-12" v-cloak>
    <table class="table">
        <tr>
            <td>@BDMall.Resources.Label.CodeModule</td>
            <td><select id="cboModule" class="form-control" v-model="condition.Module"></select></td>
            <td>@BDMall.Resources.Label.CodeFunction</td>
            <td><select id="cboFunction" class="form-control" v-model="condition.Function"></select></td>
        </tr>
        <tr>
            <td>
                @BDMall.Resources.Label.CodeValue
            </td>
            <td>
                <input type="text" class="form-control" v-model="condition.Value" />
            </td>
            <td>
                @BDMall.Resources.Label.IsActive
            </td>
            <td>
                <select id="cboIsActive" v-model="condition.IsActive" class="form-control" >
                    <option value="-1">@BDMall.Resources.Label.PleaseSelect</option>
                    <option value="0">@BDMall.Resources.Label.No</option>
                    <option value="1">@BDMall.Resources.Label.Yes</option>
                </select>
            </td>
        </tr>
        <tr>
            <td>
                @BDMall.Resources.Label.IsDeleted
            </td>
            <td>
                <select id="cboIsActive" v-model="condition.IsDeleted" class="form-control">
                    <option value="-1">@BDMall.Resources.Label.PleaseSelect</option>
                    <option value="0">@BDMall.Resources.Label.No</option>
                    <option value="1">@BDMall.Resources.Label.Yes</option>
                </select>
            </td>
            <td colspan="2" class="text-right">
                <input type="button" class="btn btn-default" value="@BDMall.Resources.Action.Search" v-on:click="search" />
            </td>
        </tr>
    </table>

    <div>
        <div class="panel-body">
            <div id="toolbar" class="btn-group">
                <button id="btn_add" type="button" class="btn btn-default" v-on:click="iTemsAdd">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@BDMall.Resources.Action.Add
                </button>
                <button id="btn_edit" type="button" class="btn btn-default" v-on:click="iTemsModify" v-bind:disabled="IsModify">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@BDMall.Resources.Action.Modify
                </button>
                <button id="btn_delete" type="button" class="btn btn-default" v-on:click="iTemsDelete" v-bind:disabled="IsDelete">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>@BDMall.Resources.Action.Delete
                </button>
            </div>
            <table id="tblCodeMasters"></table>
        </div>
    </div>
</div>

@section scripts{
<script type="text/javascript">
        var tabId = self.frameElement.parentElement.id;
        layui.use(['miniTab'], function () {
            var layer = layui.layer,
                miniTab = layui.miniTab;
        });
        var vm = new Vue({
            el: "#app",
            data: {
                condition: {
                    Module: "-1",
                    Function: "-1",
                    Value: "",
                    IsActive: -1,
                    IsDeleted:-1
                },
                IsModify: true,
                IsDelete: true
            },
            methods: {
                search: function () {
                    $("#tblCodeMasters").bootstrapTable("refresh", { url: "/adminapi/CodeMaster/GetCodeMasters", pageNumber: 1 })
                    //$('#tblCodeMasters').bootstrapTable('refreshOptions', { pageNumber: 1 });
                    vm.IsModify = true;
                    vm.IsDelete = true;
                },
                iTemsAdd: function () {
                    //parent.setSrcTobTab("CodeMasterAdd", "Add CodeMaster", "/CodeMaster/AddCodeMaster/0", true);
                    @*parent.addTab({
                        id: "CodeMasterAdd",
                        title:
                            '@BDMall.Resources.Label.AddCodeMaster',
                        href:
                            "/CodeMaster/Edit/0",
                        checkLogin: true,
                        callback: vm.search,
                        parentId: tabId
                    });*@

                       miniTab.openNewTabByIframe({
                           href: "/CodeMaster/Edit/0",
                        title:'@BDMall.Resources.Label.AddCodeMaster',
                        callback: vm.search
                    });

                },
                iTemsModify: function () {
                    var row = $("#tblCodeMasters").bootstrapTable("getSelections")[0];
                    //parent.setSrcTobTab("CodeMasterModify", "Modify CodeMaster", "/CodeMaster/AddCodeMaster/" + row.id, true);
                    @*parent.addTab({
                        id: "CodeMasterModify_" + row.Id,
                        title:
                            '@BDMall.Resources.Action.Modify' + '-' + row.Key,
                        href:
                        "/CodeMaster/Edit/" + row.Id,
                        checkLogin: true,
                        callback: vm.search,
                        parentId: tabId
                    });*@

                     miniTab.openNewTabByIframe({
                         href: "/CodeMaster/Edit/" + row.Id,
                        title: '@BDMall.Resources.Action.Modify' + '-' + row.Key,
                        callback: vm.search
                    });
                },
                iTemsDelete: function () {
                    var rows = $("#tblCodeMasters").bootstrapTable("getSelections");
                    SystemConfirm('@BDMall.Resources.Message.ConfirmDelete', function () {
                        var ids = "";
                        rows.forEach(function (val) {
                            if (ids == "") {
                                ids = val.Id;
                            } else {
                                ids += "," + val.Id;
                            }

                        });
                        var data = new Object();
                        data.cIds = ids;
                        WS.AjaxP("get", "/adminapi/CodeMaster/Delete", data, function (response) {
                            if (response.Succeeded == true) {
                                vm.search();
                            }
                            else {
                                showWarn('@BDMall.Resources.Message.DeleteFailed');
                            }
                        }, function () { });

                    })

                },
                setToolbarButtonState: function () {
                    var selected = $("#tblCodeMasters").bootstrapTable("getSelections");
                    if (selected.length == 1) {
                        vm.IsModify = false;
                    }
                    else {
                        vm.IsModify = true;
                    }

                    if (selected.length >= 1) {
                        vm.IsDelete = false;
                    }
                    else {
                        vm.IsDelete = true;
                    }

                }
            }
        })

        var codeMasterTableInit = function () {

            var oTableInit = new Object();
            oTableInit.Init = function () {
                $("#tblCodeMasters").bootstrapTable({
                    method: 'post',                      //请求方式（*）
                    //url: '/adminapi/Product/SearchTableData',         //请求后台的URL（*）
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    //queryParamsType:'limit',
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: true,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    smartDisplay: false,
                    showRefresh: true,                  //是否显示刷新按钮
                    clickToSelect: true,                //是否启用点击选中行
                    //height: 750,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    //uniqueId: "Sku",                     //每一行的唯一标识，一般为主键列
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    pagination: true,                   //是否显示分页（*）
                    dataField: "Data",
                    totalField: "TotalRecord",
                    ajaxOptions: {
                        beforeSend: function (request) {
                            var access_token = $.cookie("access_token");
                            request.setRequestHeader("Authorization", "Bearer " + access_token);
                        }
                    },
                    onCheck: function (row) {
                        vm.setToolbarButtonState();
                    },
                    onUncheck: function (row) {
                        vm.setToolbarButtonState();
                    },
                    onCheckAll: function (rows) {
                        vm.setToolbarButtonState();
                    },
                    onUncheckAll: function (rows) {
                        vm.setToolbarButtonState();
                    },
                    columns: [{
                        checkbox: true
                    }, {
                            field: 'Id',
                        title: '',
                        visible: false
                    }, {
                        field: 'ClientId',
                        title: '',
                        visible: false
                    }, {
                        field: 'Module',
                        sortable: true,
                        title: '@BDMall.Resources.Label.CodeModule'
                    }, {
                        field: 'Function',
                        sortable: true,
                        title: '@BDMall.Resources.Label.CodeFunction'
                    }, {
                        field: 'Key',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Key'
                    }, {
                        field: 'Value',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Value'
                    },
                    {
                        field: 'Remark',
                        sortable: true,
                        title: '@BDMall.Resources.Label.Remarks'
                    }, {
                    field: 'IsActive',
                    sortable: true,
                    title: '@BDMall.Resources.Label.IsActive',
                    formatter: function (value, row, index) {
                        var result = "";
                        if (value == true) {
                            result = '@BDMall.Resources.Label.Yes';
                        } else
                        {
                            result = '@BDMall.Resources.Label.No';
                        }
                        return result;
                    }
                }, {
                    field: 'IsDeleted',
                    sortable: true,
                    title: '@BDMall.Resources.Label.IsDeleted',
                    formatter: function (value, row, index) {
                        var result = "";
                        if (value == true) {
                            result = '@BDMall.Resources.Label.Yes';
                        } else
                        {
                            result = '@BDMall.Resources.Label.No';
                        }
                        return result;
                    }
                }
                    ]
                });
            };

            oTableInit.queryParams = function (params) {
                var page = 1;
                if (params.offset > 0) {
                    page = parseInt(params.offset / params.limit) + 1;
                }
                var sortedBy = params.sort;
                var sorted = params.order;

                vm.condition.PageInfo = { Page: page, PageSize: params.limit, SortName: sortedBy, SortOrder: sorted };
                return vm.condition;
            }
            return oTableInit;
        }

        $(document).ready(function () {
            InitNormalSelect("cboModule", "/adminapi/Dict/GetCodeMasterModules", true, null, false);
            InitNormalSelect("cboFunction", "/adminapi/Dict/GetCodeMasterFunction", true, null, false);
            var oTable = codeMasterTableInit();
            oTable.Init();
        });
</script>
}

